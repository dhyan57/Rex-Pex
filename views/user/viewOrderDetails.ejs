<%- include('../partials/user/header') %>

    <style>
        .order-details-section {
            padding-top: 50px;
        }

        .store-order-summary h2.store-name {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .order-total h3 {
            font-size: 1.25rem;
        }

        .shipment-status .card-body {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .order-products .product-item {
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
        }

        .product-image {
            border-radius: 8px;
        }

        .order-summary .card-body {
            display: flex;
            justify-content: space-between;
            gap: 20px;
        }

        .shipping-details,
        .payment-method,
        .order-summary-details {
            width: 30%;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <main class="main">
        <!-- Order Details Section -->
        <section class="order-details-section position-relative pt-50">
            <div class="container">
                <!-- Return to Orders Link -->
                <div class="return-link mb-4">
                    <a href="/orders" class="text-muted"><i class="fi-rs-angle-left"></i> Return to Orders</a>
                </div>

                <!-- Store and Order Summary -->
                <!-- Store and Order Summary -->
                <div class="store-order-summary d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <!-- <h2 class="store-name">Digitalage</h2> -->
                        <p>Order ID: <%= order.orderId %> <br>Payment Status:
                                <span class="badge text-dark ms-2 
                <% if (order.paymentStatus === 'Pending') { %> bg-secondary 
                <% } else if (order.paymentStatus === 'Processing') { %> bg-info 
                <% } else if (order.paymentStatus === 'Completed') { %> bg-success 
                <% } else if (order.paymentStatus === 'Failed') { %> bg-dander 
                <% } %>">
                                    <%= order.paymentStatus %>
                                </span>&nbsp;&nbsp;&nbsp;
                                <% if (order.paymentStatus==='Pending' && order.paymentMethod==='Online' ) { %>
                                    <button id="continuePaymentButton" class="btn btn-primary"
                                        onclick="retryPayment('<%=order._id%>')">Continue Payment</button>
                                    <% } %>
                        </p>
                        <p>Placed on: <%= order.createdOn.toLocaleString() %>
                        </p>
                    </div>
                    <div class="order-total">
                        <h3>Total: <span class="text-primary">₹ <%= order.finalAmount.toLocaleString() %></span></h3>
                    </div>
                </div>


                <!-- Shipment Status -->
                <div class="shipment-status card mb-4">
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <div>
                            <h5>Shipment Status: <span class="badge text-dark ms-2 
                                <% if (order.status === 'Pending') { %> bg-secondary 
                                <% } else if (order.status === 'Processing') { %> bg-info 
                                <% } else if (order.status === 'Shipped') { %> bg-primary 
                                <% } else if (order.status === 'Delivered') { %> bg-success 
                                <% } else if (order.status === 'Cancelled') { %> bg-danger 
                                <% } else if (order.status === 'Return Request') { %> bg-warning 
                                <% } else if (order.status === 'Returned') { %> bg-primary
                                <% } %>">
                                    <%= order.status %>
                                </span>
                            </h5>
                        </div>
                        <%if(order.status == "Delivered"){%>
                            <a href="/download-invoice?id=<%= order._id %>" class="btn btn-primary">Download Invoice</a>
                        <%}%>
                    </div>
                </div>

                <!-- Products in Order -->
                <div class="order-products card mb-4">
                    <div class="card-body">
                        <% for (let i=0; i < products.length; i++) { %>
                            <div class="product-item d-flex align-items-center mb-4">
                                <img src="uploads/re-image/<%= products[i].productImage[0] %>"
                                    alt="<%= products[i].productName %>" class="product-image me-3" width="80">
                                <div class="product-details">
                                    <h5>
                                        <%= products[i].productName %>
                                    </h5>
                                    <p>Qty: <%= order.orderedItems[i].quantity %>
                                    </p>
                                </div>
                                <div class="product-price ms-auto">
                                    <h5>₹ <%= products[i].salePrice.toLocaleString() %>
                                    </h5>
                                </div>
                            </div>
                            <% } %>
                    </div>
                </div>

                <!-- Order Summary and Shipping Details -->
                <div class="order-summary card">
                    <div class="card-body d-flex justify-content-between">
                        <div class="shipping-details">
                            <h6>Shipping Details</h6>
                            <p>
                                <%= address.name %>
                            </p>
                            <p>
                                <%= address.streetAddress %>, <%= address.city %>, <%= address.state %> - <%=
                                                address.pincode %>
                            </p>
                            <p>Phone: <%= address.phone %>
                            </p>
                        </div>

                        <div class="payment-method text-center">
                            <h6>Payment Method</h6><br>
                            <p><strong>
                                    <%=order.paymentMethod%>
                                </strong></p>
                        </div>

                        <div class="order-summary-details">
                            <h6>Order Summary</h6>
                            <p>Subtotal: ₹<%= order.totalPrice.toLocaleString() %>
                            </p>
                            <p>Discount: ₹<%= order.discount.toLocaleString() %>
                            </p>
                            <hr>
                            <h5>Total: ₹<%= order.finalAmount.toLocaleString() %>
                            </h5>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main><br><br><br>

    <%- include('../partials/user/footer') %>

        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script>
            async function retryPayment(orderId) {
                try {
                    // Step 1: Request a new Razorpay order ID for the retry payment
                    const response = await fetch('/retry-payment', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ orderId })
                    });

                    const data = await response.json();
                    if (!data.success) {
                        throw new Error(data.message || 'Failed to initialize retry payment');
                    }

                    // Step 2: Configure Razorpay options with the new order ID
                    const options = {
                        key: data.razorpayKey,
                        amount: data.amount,
                        currency: data.currency,
                        order_id: data.razorpayOrderId,
                        handler: async function (response) {
                            try {
                                // Step 3: Verify the payment
                                const verifyResponse = await fetch('/verify-payment', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({
                                        orderId: orderId,  // Use the provided order ID
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_signature: response.razorpay_signature
                                    })
                                });

                                const verifyData = await verifyResponse.json();
                                if (!verifyData.success) throw new Error(verifyData.message || 'Payment verification failed');

                                // Step 4: Finalize the order by updating it to "Completed"
                                const finalOrderResponse = await fetch('/place-order', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({
                                        orderId: orderId,  // Use the provided order ID
                                        paymentSuccess: true,
                                        paymentDetails: {
                                            razorpay_payment_id: response.razorpay_payment_id,
                                            razorpay_order_id: response.razorpay_order_id,
                                            razorpay_signature: response.razorpay_signature
                                        }
                                    })
                                });

                                const finalOrderData = await finalOrderResponse.json();
                                if (!finalOrderData.success) throw new Error(finalOrderData.message || 'Failed to finalize order');

                                // Redirect on successful payment
                                window.location.href = `/order-confirmation?id=${orderId}`;
                            } catch (error) {
                                Swal.fire({ title: 'Order Error', text: error.message || 'Failed to complete order', icon: 'error' });
                            }
                        },
                        modal: {
                            ondismiss: function () {
                                Swal.fire({
                                    title: 'Payment Cancelled',
                                    text: 'Your payment was cancelled. You can retry payment from the order details page.',
                                    icon: 'info'
                                });
                            }
                        }
                    };

                    const razorpay = new Razorpay(options);
                    razorpay.open();
                } catch (error) {
                    Swal.fire({ title: 'Payment Error', text: error.message || 'Failed to retry payment', icon: 'error' });
                }
            }

        </script>