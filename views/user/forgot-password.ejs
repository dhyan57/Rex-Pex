<!DOCTYPE html>
<html lang="zxx">
<head>
    <meta charset="UTF-8" />
    <meta name="description" content="Male_Fashion Template" />
    <meta name="keywords" content="Male_Fashion, unica, creative, html" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Male-Fashion</title>
    <link
    href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
    rel="stylesheet"
    />
    <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css" />
    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css" />
    <link rel="stylesheet" href="css/elegant-icons.css" type="text/css" />
    <link rel="stylesheet" href="css/magnific-popup.css" type="text/css" />
    <link rel="stylesheet" href="css/nice-select.css" type="text/css" />
    <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css" />
    <link rel="stylesheet" href="css/slicknav.min.css" type="text/css" />
    <link rel="stylesheet" href="css/style.css" type="text/css" />
    <link
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"rel="stylesheet"/>
    <style>
    body,
    html {
        height: 100%;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f8f9fa;
    }
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        width: 525px;
    }
    .card {
        width: 100%;
        max-width: 800px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    .login-section {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }
    .login-form,
    .login-image {
        flex: 1;
        padding: 10px;
    }
    .login-form {
        max-width: 50%;
    }
    .login-image {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        max-width: 40%;
    }
    .login-image img {
        max-width: 100%;
        height: auto;
    }
    .social-btns {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 10px;
    }
    .social-btns button {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }
    .form-group label {
        font-size: 0.875rem; 
    }
    .form-control {
        font-size: 0.875rem; 
        padding: 0.5rem;
    }
    .btn-primary {
        padding: 0.5rem 1rem; 
        font-size: 0.875rem; 
    }
    .card-title {
        font-size: 1.25rem;
    }
    .login-image .sign-up-link {
        color: #333;
        text-decoration: none;
    }
    .login-image .sign-up-link:hover {
        color: #ff7f50;
    }
    .error-message {
        color: red;
        font-size: 0.75rem;
        display: none;
    }

    .error-message {
    color: #dc3545;
    font-size: 0.8rem;
    margin-top: 0.25rem;
    display: none;
    font-weight: 500;
}

.form-control.error {
    border-color: #dc3545;
}

.form-control:focus {
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
}

.form-control.error:focus {
    border-color: #dc3545;
    box-shadow: 0 0 0 0.2rem rgba(220,53,69,.25);
}   
    </style>
</head>
<body>
    <div class="container">
    <div class="card">
        <% if(message){ %>
        <div class="alert alert-danger" role="alert">
            <%= message %>
        </div>
        <% } %>
        <form id="loginform" method="post" action="/forgot-email" onsubmit="return validateForm(event)">
            <div class="form-group mt-3px">
                <label for="email">Email address</label>
                <input
                    type="email"
                    class="form-control"
                    name="email"
                    id="email"
                    placeholder="Enter email"
                />
                <div id="error1" class="error-message"></div>
            </div>
            <div class="d-flex justify-content-between align-items-center">
                <button type="submit" class="btn btn-primary">Send OTP</button>
            </div>
        </form>
        
        <script>
        const emailid = document.getElementById("email");
        const error1 = document.getElementById("error1");
        const loginform = document.getElementById("loginform");
        
        // Email format validation
        function emailValidateChecking() {
            const emailval = emailid.value.trim();
            const emailpattern = /^[a-zA-Z0-9._-]+@([a-zA-Z0-9.-]+)\.([a-zA-Z]{2,4})$/;
        
            if (!emailval) {
                showError("Email is required");
                return false;
            } else if (!emailpattern.test(emailval)) {
                showError("Invalid email format");
                return false;
            }
            return true;
        }
        
        // Show error message
        function showError(message) {
            error1.style.display = "block";
            error1.innerHTML = message;
            emailid.classList.add('error');
        }
        
        // Clear error message
        function clearError() {
            error1.style.display = "none";
            error1.innerHTML = "";
            emailid.classList.remove('error');
        }
        
        // Form submission handler
        async function validateForm(event) {
            event.preventDefault();
            
            if (!emailValidateChecking()) {
                return false;
            }
            loginform.submit();
        
            try {
                const response = await fetch('/forgot-email', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        email: emailid.value.trim()
                    })
                });
        
                const data = await response.json();
                
                if (!data.status) {
                    showError(data.message || "Email not registered");
                    return false;
                }
        
                // If successful, submit the form
                
                
            } catch (error) {
                showError("An error occurred. Please try again.");
                return false;
            }
        }
        
        // Real-time validation on input
        emailid.addEventListener('input', function() {
            if (this.value.trim()) {
                emailValidateChecking();
            } else {
                clearError();
            }
        });
        </script>
        
        <style>
        .error-message {
            color: #dc3545;
            font-size: 0.8rem;
            margin-top: 0.25rem;
            display: none;
            font-weight: 500;
        }
        
        .form-control.error {
            border-color: #dc3545;
        }
        
        .form-control.error:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220,53,69,.25);
        }
        </style>    
</body>
</html>
